#**
 *  Global macros used by other templates.
 *  This file must be named VM_global_library.vm
 *  in order for Velocity to find it.
 *#

#macro(param $key)$request.params.get($key)#end

#macro(url_root)/solr#end

## TODO: s/url_for_solr/url_for_core/ and s/url_root/url_for_solr/
#macro(core_name)$request.core.name#end
#macro(url_for_solr)#{url_root}#if($request.core.name != "")/$request.core.name#end#end
#macro(url_for_home)#url_for_solr/browse#end

#macro(q)&q=$!{esc.url($params.get('q'))}#end

#macro(filter_header $fq) 
#set ($name = $fq.substring(0,$fq.indexOf(':')))
	#if($name=="publication_date")		
		#set ($value = $fq.substring($math.add(2,$fq.indexOf(':'))))
		#set($header_name = "publication date")
		#set($header_value = "#date_year($value)")
	#elseif($name=="application_date")
		#set ($value = $fq.substring($math.add(2,$fq.indexOf(':'))))
		#set($header_name = "application date")
		#set($header_value = "#date_year($value)")
	#elseif($name=="ipc_section")
		#set ($value = $fq.substring($math.add(1,$fq.indexOf(':'))).replaceAll('\"',""))
		#set($header_name = "ipc section")
		#set($header_value = $ipc_sections_titles.get($value) + " (" + $value + ")")
	#else
		#set ($name = $fq.substring(0,$fq.indexOf(':')))
		#set ($value = $fq.substring($math.add(1,$fq.indexOf(':'))))
		#set($header_name = $name)
		#set($header_value = $value)
	#end
	$header_name:($header_value)
#end

#macro(fqs $p)#foreach($fq in $p)#if($velocityCount>1)&#{end}fq=$esc.url($fq)#end#end

#macro(debug)#if($request.params.get('debugQuery'))&debugQuery=true#end#end

#macro(boostPrice)#if($request.params.get('bf') == 'price')&bf=price#end#end        

#macro(analytic)
#if($request.params.get('analytic'))
&analytic=$request.params.get('analytic')
#end
#if($request.params.get('hincludeq'))
&hincludeq=$request.params.get('hincludeq')
#end
#if($request.params.get('showrecords'))
&showrecords=$request.params.get('showrecords')
#end
#if($request.params.get('conceptsmethod'))
&conceptsmethod=$request.params.get('conceptsmethod')
#end
#if($request.params.get('conceptsno'))
&conceptsno=$request.params.get('conceptsno')
#end
#if($request.params.get('searchtitle'))
&searchtitle=$request.params.get('searchtitle')
#end
#if($request.params.get('searchabstract'))
&searchabstract=$request.params.get('searchabstract')
#end
#if($request.params.get('searchclaims'))
&searchclaims=$request.params.get('searchclaims')
#end
#if($request.params.get('hmaxngrams'))
&hmaxngrams=$request.params.get('hmaxngrams')
#end
#if($request.params.get('hseealsomaxngrams'))
&hseealsomaxngrams=$request.params.get('hseealsomaxngrams')
#end
#if($request.params.get('hminwikilen'))
&hminwikilen=$request.params.get('hminwikilen')
#end
#if($request.params.get('hminseealsolen'))
&hminseealsolen=$request.params.get('hminseealsolen')
#end
#if($request.params.get('hminassocnt'))
&hminassocnt=$request.params.get('hminassocnt')
#end
#if($request.params.get('hmaxhits'))
&hmaxhits=$request.params.get('hmaxhits')
#end
#if($request.params.get('hwikifield'))
&hwikifield=$request.params.get('hwikifield')
#end
#if($request.params.get('alltext'))
&alltext=$request.params.get('alltext')
#end
#if($request.params.get('hsim'))
&hsim=$request.params.get('hsim')
#end
#if($request.params.get('hshowids'))
&hshowids=$request.params.get('hshowids')
#end
#if($request.params.get('hshowpids'))
&hshowpids=$request.params.get('hshowpids')
#end
#if($request.params.get('hshowweight'))
&hshowweight=$request.params.get('hshowweight')
#end
#if($request.params.get('hshowassocounts'))
&hshowassocounts=$request.params.get('hshowassocounts')
#end
#if($request.params.get('hshowtype'))
&hshowtype=$request.params.get('hshowtype')
#end
#if($request.params.get('hshowdocno'))
&hshowdocno=$request.params.get('hshowdocno')
#end
#if($request.params.get('hshowlen'))
&hshowlen=$request.params.get('hshowlen')
#end
#if($request.params.get('hshowtable'))
&hshowtable=$request.params.get('hshowtable')
#end
#if($request.params.get('hrelaxcache'))
&hrelaxcache=$request.params.get('hrelaxcache')
#end
#if($request.params.get('hrelatednessexpr'))
&hrelatednessexpr=$request.params.get('hrelatednessexpr')
#end
#if($request.params.get('hexperin'))
&hexperin=$request.params.get('hexperin')
#end
#if($request.params.get('hexperout'))
&hexperout=$request.params.get('hexperout')
#end
#if($request.params.get('hrelaxcategories'))
&hrelaxcategories=$request.params.get('hrelaxcategories')
#end
#if($request.params.get('hrelaxsametitle'))
&hrelaxsametitle=$request.params.get('hrelaxsametitle')
#end
#if($request.params.get('hrelaxlistof'))
&hrelaxlistof=$request.params.get('hrelaxlistof')
#end
#if($request.params.get('hrelaxdisambig'))
&hrelaxdisambig=$request.params.get('hrelaxdisambig')
#end
#if($request.params.get('hrelaxner'))
&hrelaxner=$request.params.get('hrelaxner')
#end
#if($request.params.get('hwikiextraq'))
&hwikiextraq=$!{esc.url($request.params.get('hwikiextraq'))}
#end
#if($request.params.getParams('ignsem'))
#foreach($ignsem in $request.params.getParams('ignsem'))
&ignsem=$ignsem
#end
#end
#end

#macro(facet_fields)
	#if($!esc.url($params.get('facet.field')))
		&facet=true
		#foreach($facetfield in $request.params.getParams('facet.field'))
		&facet.field=$!esc.url($facetfield)		
		#end		
	#end
#end	
	
#macro(facet_ranges)
	#if($!esc.url($params.get('facet.range')))
		&facet=true
		#foreach($facetrange in $request.params.getParams('facet.range'))
		&facet.range=$!esc.url($facetrange)		
		#end		
	#end
	#if($!esc.html($params.get('f.publication_date.facet.range.start')))
		&f.publication_date.facet.range.start=$!esc.url($params.get('f.publication_date.facet.range.start'))
	#end
	#if($!esc.html($params.get('f.publication_date.facet.range.end')))
		&f.publication_date.facet.range.end=$!esc.url($params.get('f.publication_date.facet.range.end'))
	#end
	#if($!esc.html($params.get('f.publication_date.facet.range.gap')))
		&f.publication_date.facet.range.gap=$!esc.url($params.get('f.publication_date.facet.range.gap'))
	#end
	
	#if($!esc.html($params.get('f.application_date.facet.range.start')))
		&f.application_date.facet.range.start=$!esc.url($params.get('f.application_date.facet.range.start'))
	#end
	#if($!esc.html($params.get('f.application_date.facet.range.end')))
		&f.application_date.facet.range.end=$!esc.url($params.get('f.application_date.facet.range.end'))
	#end
	#if($!esc.html($params.get('f.application_date.facet.range.gap')))
		&f.application_date.facet.range.gap=$!esc.url($params.get('f.application_date.facet.range.gap'))
	#end
#end        

#macro(annotate)#if($request.params.get('annotateBrowse'))&annotateBrowse=true#end#end

#macro(annTitle $msg)#if($annotate == true)title="$msg"#end#end

#macro(spatial)#if($request.params.get('sfield'))&sfield=store#end#if($request.params.get('pt'))&pt=$request.params.get('pt')#end#if($request.params.get('d'))&d=$request.params.get('d')#end#end

#macro(qOpts)#set($queryOpts = $request.params.get("queryOpts"))#if($queryOpts && $queryOpts != "")&queryOpts=$queryOpts#end#end

#macro(group)#if($request.params.getBool("group") == true)&group=true#end#if($request.params.get("group.field"))#foreach($grp in $request.params.getParams('group.field'))&group.field=$grp#end#end#end

#macro(sort $p)#if($p)#foreach($s in $p)&sort=$esc.url($s)#end#end#end

#macro(lensNoQ)?#if($request.params.getParams('fq') and $list.size($request.params.getParams('fq')) > 0)&#fqs($request.params.getParams('fq'))#end#sort($request.params.getParams('sort'))#debug#boostPrice#annotate#spatial#qOpts#group#end
#macro(lens)#lensNoQ#q#end
        

#macro(url_for_lens)#{url_for_home}#lens#end

#macro(url_for_start $start)#url_for_home#lens#analytic#facet_ranges#facet_fields&start=$start#end

#macro(url_for_filters $p)#url_for_home?#q#boostPrice#spatial#qOpts#if($list.size($p) > 0)&#fqs($p)#end#debug#end

#macro(url_for_nested_facet_query $field)#url_for_home#lens&fq=$esc.url($field)#end

## TODO: convert to use {!raw f=$field}$value (with escaping of course)
#macro(url_for_facet_filter $field $value)#url_for_home#lens&fq=$esc.url($field):%22$esc.url($value)%22#end

#macro(url_for_facet_date_filter $field $value)#url_for_home#lens&fq=$esc.url($field):$esc.url($value)#end

#macro(url_for_facet_range_filter $field $value)#url_for_home#lens&fq=$esc.url($field):$esc.url($value)#end

#macro(url_for_cluster_filter $field $value)#url_for_home?q=$esc.url($field):$esc.url($value)&search1=localsearch#end

#macro(link_to_previous_page $text)
  #if($page.current_page_number > 1)
    #set($prev_start = $page.start - $page.results_per_page)
    <a class="prev-page" href="#url_for_start($prev_start)">$text</a>
  #end
#end

#macro(link_to_next_page $text)
  #if($page.current_page_number < $page.page_count)
    #set($next_start = $page.start + $page.results_per_page)
    <a class="next-page" href="#url_for_start($next_start)">$text</a>
  #end
#end

#macro(link_to_page $page_number $text)
  #if($page_number == $page.current_page_number)
    $text
  #else
    #if($page_number <= $page.page_count)
      #set($page_start = $page_number * $page.results_per_page - $page.results_per_page)
      <a class="page" href="#url_for_start($page_start)">$text</a>
    #end
  #end
#end

#macro(display_facet_query $field, $display, $fieldName)
  #if($field.size() > 0)
  <span class="facet-field">$display</span>
    <ul>
    #foreach ($facet in $field)
      #if ($facet.value > 0)
        #set($facetURL = "#url_for_nested_facet_query($facet.key)")
        #if ($facetURL != '')
          <li><a href="$facetURL">$facet.key</a> ($facet.value)</li>
        #end
      #end
    #end
    </ul>
  #end      
#end


#macro(display_facet_range $field, $display, $fieldName, $start, $end, $gap, $before, $after)
  <span class="facet-field">$display</span>
    <ul>
    #if($before && $before != "")
      #set($value = "[* TO " + "#format_value($start)" + "}")
      #set($facetURL = "#url_for_facet_range_filter($fieldName, $value)")
      <li><a href="$facetURL">Less than #format_value($start)</a> ($before)</li>
    #end
    #foreach ($facet in $field)
      #set($rangeEnd = "#range_get_to_value($facet.key, $gap)")
      #set($value = "[" + $facet.key + " TO " + $rangeEnd + "}")
      #set($facetURL = "#url_for_facet_range_filter($fieldName, $value)")
      #if ($facetURL != '')
        <li><a href="$facetURL">$facet.key - #format_value($rangeEnd)</a> ($facet.value)</li>
      #end
    #end
    #if($end && $end != "" && $after > 0)
      #set($value = "[" + "#format_value($end)" + " TO *}")
      #set($facetURL = "#url_for_facet_range_filter($fieldName, $value)")
      <li><a href="$facetURL">More than #format_value($end)</a> ($after)</li>
    #end
    </ul>
#end

## $pivots is a list of facet_pivot
#macro(display_facet_pivot $pivots, $display)
  #if($pivots.size() > 0)
  <span class="facet-field">$display</span>
    <ul>
      #foreach ($pivot in $pivots)
        #foreach ($entry in $pivot.value)
          <a href="#url_for_facet_filter($entry.field, $entry.value)">$entry.field::$entry.value</a> ($entry.count)
          <ul>
            #foreach($nest in $entry.pivot)
              <a href="#url_for_facet_filter($entry.field, $entry.value)&fq=$esc.url($nest.field):%22$esc.url($nest.value)%22">$nest.field::$nest.value</a> ($nest.count)
            #end
          </ul>
        #end
      #end
    </ul>
  #end
#end

#macro(field $f)
  #if($response.response.highlighting.get($docId).get($f).get(0))
    #set($pad = "")
    #foreach($v in $response.response.highlighting.get($docId).get($f))
$pad$v##
      #set($pad = " ... ")
    #end
  #else
    #foreach($v in $doc.getFieldValues($f))
$v##
    #end
  #end
#end  

#macro(utc_date $theDate)
$date.format("yyyy-MM-dd'T'HH:mm:ss'Z'",$theDate,$date.getLocale(),$date.getTimeZone().getTimeZone("UTC"))##
#end

##macro(date_year $theDate)
##$math.add($math.toInteger($theDate.substring(0,4)),1)
##$math.toInteger($theDate.substring(0,4))
##end

#macro(format_value $val)
#if(${val.class.name} == "java.util.Date")
#utc_date($val)##
#else
$val##
#end
#end

#macro(range_get_to_value $inval, $gapval)
#if(${gapval.class.name} == "java.lang.String")
$inval$gapval##
#elseif(${gapval.class.name} == "java.lang.Float" || ${inval.class.name} == "java.lang.Float")
$math.toDouble($math.add($inval,$gapval))##
#else
$math.add($inval,$gapval)##
#end
#end
